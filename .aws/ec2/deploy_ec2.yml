- name: Terminate old EC2
  hosts: localhost
  connection: local

  tasks:
    - name: Get running instances
      ec2_instance_info:
        region: us-east-1        
        aws_access_key: "{{access_key}}"
        aws_secret_key: "{{secret_key}}"
        security_token: "{{session_token}}"
        filters:
          "tag:app": eshop
      register: ec2_instance_info

    - name: Display info
      debug: msg='{{item.instance_id}}'
      with_items: '{{ec2_instance_info.instances}}'

    - name: Terminate instances
      ec2:
        region: us-east-1
        key_name: pomodoro
        instance_ids: '{{item.instance_id}}'
        state: 'absent'
        wait: yes        
        aws_access_key: "{{access_key}}"
        aws_secret_key: "{{secret_key}}"
        security_token: "{{session_token}}"
      with_items: '{{ec2_instance_info.instances}}'

- name: Deploy to EC2
  hosts: localhost
  connection: local

  tasks:
    - name: Launch an EC2 instance
      ec2:
        instance_type: t2.micro
        image: 
        region: us-east-1
        key_name: pomodoro
        vpc_subnet_id: 
        assign_public_ip: yes
        wait: yes
        count: 1
        group: eshop
        aws_access_key: "{{access_key}}"
        aws_secret_key: "{{secret_key}}"
        security_token: "{{session_token}}"
      register: ec2

    - name: Add instance hostname to group
      add_host: hostname={{ item.public_dns_name }} groupname=launched
      with_items: '{{ ec2.instances }}'

    - name: Wait for SSH connection
      wait_for: host={{ item.public_dns_name }} port=22 delay=30 timeout=300 state=started
      with_items: '{{ ec2.instances }}'

  tasks:
    - name: Install Git and Docker
      yum:
        name:
          - git
          - docker
        state: latest
        update_cache: yes
      become: yes

    - service:
        name: docker
        state: started
        enabled: yes
      become: yes

    - name: Start Docker on startup
      shell: systemctl enable docker
      become: yes

    - name: Set rights to Docker
      shell: usermod -a
      become: yes

    - name: Get eshop from GIT
      git:
        repo: 'https://github.com/Heilzeil/4IT572_final.git'
        dest: ./app

    - name: Build Docker with eshop
      shell: cd app && docker build -t myeshop:latest .
      become: yes

    - name: Run Docker with eshop
      shell: docker run -p 80:3000 myeshop
      async: 45
      poll: 0
      become: yes
      
    - wait_for:
        port:
          80
